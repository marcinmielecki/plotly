--Oracle DB creation and insertion of data samples

--tworzenie tabeli z zawartoscia procesu
create table T654 (th13 number(9,3), sigma number(10,4), timestamp date);
insert into T654 values (0.000,0.0125,To_Date('2015:10:15:09:41:18','yyyy:mm:dd:hh:mi:ss'));
insert into T654 values (0.063,0.0236,To_Date('2015:10:15:11:01:12','yyyy:mm:dd:hh:mi:ss'));
insert into T654 values (0.126,0.0351,To_Date('2015:10:15:09:31:07','yyyy:mm:dd:hh:mi:ss'));
insert into T654 values (0.188,0.1092,To_Date('2015:10:15:11:13:13','yyyy:mm:dd:hh:mi:ss'));

--tworzenie tabeli opisujacej proces
create table T654_desc (ct1 number(4,3), ct2 number(4,3), ebeam1 number(9,3), ebeam2 number(9,3), nevents number(7), vR number(9,3), alpha23 number(9,3),mr1 number(9,3))
insert into T654_desc values (1,1,7000.,7000.,50000,7200.,1.572,925.);
--------------------------------------------
--utworzenie madlog
create table MadLog_DB (ProcessName varchar2(10), 
ValueSize number(9,3), StartingValue number(9,3), FinishValue number(9,3), NumberOfSteps number(4),
PC_Name varchar2(20), PC_Core number(2), 
StartDate date, ElapsedTime number(10), ProcessProgress number(3,2));


---
--wstawianie do madlog

declare
a number(9,3);
b number (9,3);
c number (9,3);
maxrow number(10);
progressbar number(3,2);
startingDate date;
endingDate date;
elapsed number(10);
begin
select th13 into a from t654 where rownum <3
minus
select th13 from t654 where rownum = 1;
select th13 into b from t654 where rownum = 1;
select timestamp into startingdate from t654 where timestamp = (select min(timestamp) from t654);
select timestamp into endingdate from t654 where timestamp = (select max(timestamp) from t654);
c := a-b;
select (max(timestamp) - min(timestamp))*1440 into elapsed from t654;
select max(rownum) into maxrow from t654;
progressbar:= maxrow/50;
insert into MadLog_Db values ('T654', c, 0.000, 1.572, 50,'beast',8,startingDate,elapsed,progressbar);
end;

-wyswietlanie madlog
select ProcessName, ValueSize, StartingValue, FinishValue, NumberOfSteps, PC_Name, PC_Core,
To_char(StartDate,'yyyy.dd.mm hh:mi:ss') StartDate, ElapsedTime, ProcessProgress
from madlog_db
-----------------------------------------------------
-- aktualizacja bazy danych wersja 2.13

CREATE OR REPLACE PROCEDURE UPD_MADLOG_DB AS
elapsedtime_upd madlog_db.elapsedtime%TYPE;
wyk VARCHAR2(200);
processprogress_upd madlog_db.ProcessProgress%TYPE;
CURSOR Verify_cur IS SELECT processname, NUMBEROFSTEPS FROM madlog_db WHERE processprogress != 1;
BEGIN
    FOR i IN Verify_cur LOOP
        --progress
        wyk:= 'select max(rownum) from ' || i.processname;
        EXECUTE IMMEDIATE wyk INTO processprogress_upd;
        processprogress_upd := processprogress_upd / i.NUMBEROFSTEPS;
        --elapsed
        wyk:= 'select (max(timestamp)-min(timestamp))*1440 from ' || i.processname;
        EXECUTE IMMEDIATE wyk INTO elapsedtime_upd;
        --DBMS_OUTPUT.PUT_LINE(' Progress wynosi ' || processprogress_upd || ', a elapsed ' || elapsedtime_upd);
        UPDATE MADLOG_DB SET elapsedtime = elapsedtime_upd, processprogress = processprogress_upd WHERE MADLOG_DB.processname = i.processname;
    END LOOP;
END;

-----------------------------------------------------
-- wstawianie wartosci do tabeli gÅ‚ na podstawie wartosci zawartej w tabelach zewnetrznych

CREATE OR REPLACE PROCEDURE insert_into_madlogdb  (p_PROCESSNAME VARCHAR2, p_StartingValue NUMBER, p_FINISHVALUE NUMBER, p_NUMBEROFSTEPS NUMBER, p_PC_NAME VARCHAR2, p_PC_CORE NUMBER) AS
--podstawa
ins_PROCESSNAME VARCHAR2(10):= p_PROCESSNAME;
ins_FIRST_COL VARCHAR2(20); --trzeba pobrac
 
--elapsed
ins_STARTDAT DATE;
ins_ELAPSEDTIME NUMBER(10);    
--progress;
ins_PROCESSPROGRESS NUMBER(3,2);
maxrow NUMBER(10);
--dzialanie
wyk VARCHAR2(200);
BEGIN
--startdat+elapsed time from start to last)
wyk:= 'select timestamp from ' || p_PROCESSNAME || ' where timestamp = (select min(timestamp) from ' || p_PROCESSNAME || ')';
EXECUTE IMMEDIATE wyk INTO ins_STARTDAT;
wyk := 'select (max(timestamp) - min(timestamp))*1440 from ' || p_PROCESSNAME;
EXECUTE IMMEDIATE wyk INTO ins_ELAPSEDTIME;
 
--fistcol
wyk := 'select column_name from all_tab_columns where table_name = upper(' || ins_PROCESSNAME || ') and rownum = 1';
EXECUTE IMMEDIATE wyk INTO ins_FIRST_COL;
 
--progress
wyk :='select max(rownum) from ' || ins_PROCESSNAME;
EXECUTE IMMEDIATE wyk INTO maxrow;
ins_PROCESSPROGRESS:= maxrow/p_NUMBEROFSTEPS;
 
--insert into MadLog_Db values (TableName, c
INSERT INTO MadLog_Db VALUES (ins_PROCESSNAME, ins_FIRST_COL, p_STARTINGVALUE, p_FINISHVALUE, p_NUMBEROFSTEPS, p_PC_NAME, p_PC_CORE, ins_STARTDAT, ins_ELAPSEDTIME, ins_PROCESSPROGRESS);
END;

-----------------------------------------------------
